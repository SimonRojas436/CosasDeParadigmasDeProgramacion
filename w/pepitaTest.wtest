import example.*
//YO LO HICE//

//'ASSERT' verifica que el dato en su interior se verifica//
    //that para verificar que la consulta es verdadero//
    //notThat para verificar que la consulta es falso//
test "Al iniciar pepita no está cansada" {
    assert.notThat(pepita.isTired()) 
}

test "Si la hacemos volar 9 metros, se cansa" {
    pepita.fly(9)
    assert.that(pepita.isTired())
}

test "Luego de comer alpiste, sigue cansada" {
    pepita.fly(9)
    pepita.eatFood(alpiste)
    assert.that(pepita.isTired())
}

test "Si, en cambio, hacemos que coma una manzana, ya no está cansada" {
    pepita.fly(9)
    pepita.eatFood(apple)
    assert.that(pepita.isTired())
}

test "Si la hago madurar 0 veces, deberia tener 50 de energia" {
    0.times { _ => apple.rippen() }
    assert.equals(50, apple.energy())
}

test "Si la hago madurar 1 veces, deberia tener 55 de energia" {
    1.times { _ => apple.rippen() }
    assert.equals(55, apple.energy())
}

test "Si la hago madurar 10 veces, deberia tener 100 de energia" {
    10.times { _ => apple.rippen() }
    assert.equals(100, apple.energy())
}

test "Si la hago madurar 11 veces, deberia tener 80 de energia" {
    11.times { _ => apple.rippen() }
    assert.equals(80, apple.energy())
}

test "Si la hago madurar 12 veces, deberia tener 60 de energia" {
    12.times { _ => apple.rippen() }
    assert.equals(60, apple.energy())
}

test "Si la hago madurar 15 veces, deberia tener 0 de energia" {
    15.times { _ => apple.rippen() }
    assert.equals(0, apple.energy())
}

test "Si la hago madurar 16 veces, deberia tener 0 de energia" {
    16.times { _ => apple.rippen() }
    assert.equals(0, apple.energy())
}












